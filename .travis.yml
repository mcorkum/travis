sudo: false
dist: trusty
language: php
cache:
  apt: true
  directories:
    - node_modules
    - vendor
    - $HOME/.composer/cache
env:
  global:
    - WP_TRAVISCI=travis:phpunit
    - WP_FOLDER="/tmp/wordpress"
    - DB_NAME="wordpress"
    - WP_TABLE_PREFIX="wp_"
    - WP_ADMIN_USERNAME="admin"
    - WP_ADMIN_PASSWORD="admin"
    - NGORK_AUTH="d8NfARcu2wLE1hyeQd9J_6m4RuZQCCoKXJ3etDGnMv"
    - GHOST_API="1a5c4ab1f9a65c6aac5d449136ff1bcd4b25ebdd"
#  matrix:
#    - WP_VERSION=latest
#    - WP_VERSION=nightly

addons:
  apt:
    packages:
      - libjpeg-dev
      - libpng12-dev
      - php5-fpm
      - php5-mysql
      - nginx

# matrix:
#  include:
#  - php: 7.1
#  - php: 7.2
#  - php: 7.0
#  - php: 5.6
#  - php: 5.5
#  - php: 5.4
#  - php: 5.3
#    dist: precise
#  - php: 5.2
#    dist: precise
#  - php: nightly
#  allow_failures:
#  - php: nightly


before_install:
- if [ $(phpenv version-name) != "7" ]; then echo "HELLLLLLLO"; fi
# create the databases that will be used in the tests
- mysql -e "create database IF NOT EXISTS $DB_NAME;" -uroot
# set up folders
- mkdir -p $WP_FOLDER
- mkdir tools
# install wp-cli in the `tools` folder
- wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -P $(pwd)/tools/
- chmod +x tools/wp-cli.phar && mv tools/wp-cli.phar tools/wp
# append the `tools` folder to the PATH
- export PATH=$PATH:$(pwd)/tools
# prepend the `vendor/bin` folder the PATH
- export PATH=vendor/bin:$PATH

install:
  # Install Gulp CLI
  - npm install --global gulp-cli

  # Download json parser for determining ngrok tunnel
  - wget https://stedolan.github.io/jq/download/linux64/jq
  - chmod +x jq

  # Download ngrok and open tunnel to our application
  - wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
  - unzip ngrok-stable-linux-amd64.zip
  - chmod +x ngrok
  - ./ngrok authtoken $NGORK_AUTH

  # Start ngrok and get URL
  - ./ngrok http 80 > /dev/null &
  - sleep 10
  - NGROK_URL_RAW=$(curl -s localhost:4040/api/tunnels/command_line | jq --raw-output .public_url)
  - NGROKDOMAIN="${NGROK_URL_RAW##*/}"
  - BASE_URL=http://
  - NGROK_URL=$BASE_URL$NGROKDOMAIN

  # install WordPress in the `wordpress` folder
  - cd $WP_FOLDER
#  - wp core download --version=$WP_VERSION
  - wp core download
  - wp config create --dbname="$DB_NAME" --dbuser="root" --dbpass="" --dbhost="127.0.0.1" --dbprefix="$WP_TABLE_PREFIX" --extra-php="define( 'CGRKEY', '1a5c4ab1f9a65c6aac5d449136ff1bcd4b25ebdd' ); define( 'CGRGDID', '1b2bIuIb8fKZ4NoC7UHV4hoEmw8W0Levkw2h_tJwDryM' ); define( 'CGRLOCALAPIKEY', 'oC7Ub8fw8W0KZ4NoCHV4ho1Emw8W0' );"
  - wp core install --url="$NGROK_URL" --title="Test" --admin_user="$WP_ADMIN_USERNAME" --admin_password="$WP_ADMIN_PASSWORD" --admin_email="admin@$NGROKDOMAIN" --skip-email
  - wp core update-db
  - wp option update home $NGROK_URL
  - wp option update siteurl $NGROK_URL
  - wp rewrite structure '/%postname%/' --hard

  # Clone the ghost runner plugin in WP directory
  - cd $WP_FOLDER && git clone https://gitlab.com/caldera-labs/ghostrunner-runner-runner.git && cd ghostrunner-runner-runner && npm install
  - cd $WP_FOLDER/ghostrunner-runner-runner && touch .env && echo "APIKEY=$GHOST_API" >> .env && echo "ROOTURL=$NGROK_URL" >> .env && cat .env

  # Git clone plugins
  - cd $WP_FOLDER
  - git clone https://github.com/CalderaWP/Caldera-Forms.git $WP_FOLDER/wp-content/plugins/caldera-forms
  - git clone https://github.com/CalderaWP/caldera-ghost-runner.git $WP_FOLDER/wp-content/plugins/caldera-ghost-runner
  - git clone https://github.com/calderawp/cf-connected-forms $WP_FOLDER/wp-content/plugins/cf-connected-forms
  - git clone https://gitlab.com/caldera-labs/cf-result-diff-plugin.git $WP_FOLDER/wp-content/plugins/cf-result-diff-plugin

  # Setup ghost runner
  - cd $WP_FOLDER/wp-content/plugins/caldera-ghost-runner && composer clear-cache && composer install && composer update

  # Setup connected forms ih PHP is right
  - |
    # Remove Xdebug for a huge performance increase:
    if [ $TRAVIS_PHP_VERSION = "7" ]; then
      cd $WP_FOLDER/wp-content/plugins/cf-connected-forms && composer install && composer update && npm install && gulp
    else
      echo "Shit PHP version";
    fi

  # Setup cf-result-diff
  - cd $WP_FOLDER/wp-content/plugins/cf-result-diff-plugin && composer install && composer update

  # Activate all that stuff and import forms
  - cd $WP_FOLDER && wp plugin activate caldera-forms && wp plugin activate caldera-ghost-runner && wp plugin activate cf-connected-forms && wp plugin activate cf-result-diff-plugin && wp cgr import

  # get back to the build folder
  - cd $TRAVIS_BUILD_DIR

  # copy the Nginx configuration file to the available sites
  - sudo cp build/travis-nginx-conf /etc/nginx/sites-available/$NGROKDOMAIN
  - sudo sed -e "s?%WP_FOLDER%?$WP_FOLDER?g" --in-place /etc/nginx/sites-available/$NGROKDOMAIN
  - sudo sed -e "s?%NGROKDOMAIN%?$NGROKDOMAIN?g" --in-place /etc/nginx/sites-available/$NGROKDOMAIN

  # enable the site
  - sudo ln -s /etc/nginx/sites-available/$NGROKDOMAIN /etc/nginx/sites-enabled/




  # restart nginx
  - sudo service php5-fpm restart
  - sudo service nginx restart

before_script:
- sleep 1800
- |
  # Remove Xdebug for a huge performance increase:
  if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
    phpenv config-rm xdebug.ini
  else
    echo "xdebug.ini does not exist"
  fi
- |
  # Export Composer's global bin dir to PATH, but not on PHP 5.2:
  if [[ ${TRAVIS_PHP_VERSION:0:3} != "5.2" ]]; then
    composer config --list --global
    export PATH=`composer config --list --global | grep '\[home\]' | { read a; echo "${a#* }/vendor/bin:$PATH"; }`
  fi
- |
  # Install the specified version of PHPUnit depending on the PHP version:
  if [[ "$WP_TRAVISCI" == "travis:phpunit" ]]; then
    case "$TRAVIS_PHP_VERSION" in
      7.2|7.1|7.0|nightly)
        echo "Using PHPUnit 6.x"
        composer global require "phpunit/phpunit:^6"
        ;;
      5.6|5.5|5.4|5.3)
        echo "Using PHPUnit 4.x"
        composer global require "phpunit/phpunit:^4"
        ;;
      5.2)
        # Do nothing, use default PHPUnit 3.6.x
        echo "Using default PHPUnit, hopefully 3.6"
        ;;
      *)
        echo "No PHPUnit version handling for PHP version $TRAVIS_PHP_VERSION"
        exit 1
        ;;
    esac
  fi
- npm --version
- node --version
- mysql --version
- phpenv versions
- php --version
- php -m
- npm --version
- node --version
- which phpunit
- phpunit --version
- curl --version
- git --version
- locale -a

script: echo hello

#notifications:
#  slack:
#    rooms:
#      secure: PO3x/bhYXNFqAMtzDzpOAnHcg2KzG2gGbBDft1HlqN4O8hRJqrRs7hqsEe9wKZUs6qf9Jv0ZleJ5AmcSd0DbDAFsfqeWtnWpsj8NqOIWgLX0C2idvfNRzCX1mUd6E1hlAjjTGnKn4MV3m1dRurwcDqacSBVtbXKQ+yPSgM3eXYkDz8EFbTsMcda8pFskcXr98E7/YomU0QtgOcjXndxGZ53zUQ1rfaDwUJzGY3bn5nLoweVZsSIeEFSiNcip7Kt22zVlU0SAb6QlBf3F0h9IWoRD59BQ7pkl53FWzpXoHzUYOFmn0jB5y1vHMlHvTDVEmDuumpCEqnxVvLh33AwGtqYRWH36PEfTn/u1YTFr7FS7KbwrKw9Nn+jUZe3KFrVzgQNUt0El33mO0FbSoNEWJhxRarp0D1z3/HVsbon3Fwzt/3jBHGf9nI+tHH4u7KQ70+M7pzBsV7F7Lc60YnuKrcy/hkwObGB0Za9tMHPUw3c7b4ep6nSa4ts9S++IijLWDaNAq7K/j7fAfI1JrkPIw4T6PcGpNAADkmlCrvToKE4axExaJke/lkUb+3Pwdj0h7ePzPSrHT8aASlKFM1PuI1KRMn/J4wRLtGeLlfYXvVlaQYmJobJtYgoiNWJWMIybLGVBSVPohdGO3qIJbl8WNPN1cW2ZZTcEBprLe8y7MSo=
#    on_start: never
#    on_failure: always
#    on_success: change
#    on_pull_requests: false


#2koHbOSoBlMtZDaPLXFGHg
#328105548
#
#curl -s -X POST \
#   -H "Content-Type: application/json" \
#   -H "Accept: application/json" \
#   -H "Travis-API-Version: 3" \
#   -H "Authorization: token 2koHbOSoBlMtZDaPLXFGHg" \
#   -d '{ "quiet": true }' \
#   https://api.travis-ci.org/job/328105548/debug

