sudo: false
dist: trusty

language: php

notifications:
  email:
    on_success: never
    on_failure: change

branches:
  only:
  - master

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

env:
  global:
    - WP_TRAVISCI=travis:phpunit
    - WP_FOLDER="/tmp/external-wordpress"
    - DB_NAME="wordpress"
    - WP_TABLE_PREFIX="wp_"
    - WP_CLI_FOLDER="tools"
    - NGORK_AUTH="d8NfARcu2wLE1hyeQd9J_6m4RuZQCCoKXJ3etDGnMv"
    - CGRKEY="1a5c4ab1f9a65c6aac5d449136ff1bcd4b25ebdd"

  matrix:
    - WP_VERSION=latest

addons:
  apt:
    packages:
      - libjpeg-dev
      - libpng12-dev
      - php5-fpm
      - php5-mysql
      - nginx

# matrix:
#  include:
#  - php: 7.1
#  - php: 7.0
#  - php: 5.6
#  - php: 5.3

before_install:
  # Create the databases that will be used in the tests
  - mysql -e "create database IF NOT EXISTS $DB_NAME;" -uroot

  # Set up folders
  - mkdir -p $WP_FOLDER && mkdir tools

  # Install WP-CLI
  - wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar -P $(pwd)/$WP_CLI_FOLDER/ && chmod +x $WP_CLI_FOLDER/wp-cli.phar && mv $WP_CLI_FOLDER/wp-cli.phar $WP_CLI_FOLDER/wp

  # Append the 'tools; folder to the PATH
  - export PATH=$PATH:$(pwd)/$WP_CLI_FOLDER

  # Prepend the `vendor/bin` folder the PATH
  - export PATH=vendor/bin:$PATH

  # Install Gulp CLI
  - npm install --global gulp-cli

install:
  # Download json parser for determining ngrok tunnel
  - wget https://stedolan.github.io/jq/download/linux64/jq
  - chmod +x jq

  # Download ngrok and open tunnel to application
  - wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
  - unzip ngrok-stable-linux-amd64.zip
  - chmod +x ngrok
  - ./ngrok authtoken $NGORK_AUTH

  # Start ngrok and get URL
  - ./ngrok http 80 > /dev/null &
  - sleep 10
  - NGROK_URL_RAW=$(curl -s localhost:4040/api/tunnels/command_line | jq --raw-output .public_url)
  - NGROKDOMAIN="${NGROK_URL_RAW##*/}"
  - BASE_URL=http://
  - NGROK_URL=$BASE_URL$NGROKDOMAIN

  # install WordPress in the `wordpress` folder
  - cd $WP_FOLDER
  - wp core download --version=$WP_VERSION
  - wp config create --dbname="$DB_NAME" --dbuser="root" --dbpass="" --dbhost="127.0.0.1" --dbprefix="$WP_TABLE_PREFIX" --extra-php="define( 'CGRKEY', '1a5c4ab1f9a65c6aac5d449136ff1bcd4b25ebdd' ); define( 'CGRGDID', '1b2bIuIb8fKZ4NoC7UHV4hoEmw8W0Levkw2h_tJwDryM' ); define( 'CGRLOCALAPIKEY', 'oC7Ub8fw8W0KZ4NoCHV4ho1Emw8W0' );"
  - wp core install --url="$NGROK_URL" --title="Test" --admin_user="admin" --admin_password="admin" --admin_email="admin@$NGROKDOMAIN" --skip-email
  - wp core update-db
  - wp option update home $NGROK_URL
  - wp option update siteurl $NGROK_URL
  - wp rewrite structure '/%postname%/' --hard

  # Copy Caldera to NGROK accessible site
  # - rsync -av $TRAVIS_BUILD_DIR $WP_FOLDER/wp-content/plugins/caldera-forms --exclude="/tmp" --exclude='$WP_FOLDER' --exclude='/bin' --exclude='/tools

  # Git clone plugins
  - cd $WP_FOLDER
  - git clone https://github.com/CalderaWP/Caldera-Forms.git $WP_FOLDER/wp-content/plugins/caldera-forms
  - git clone https://github.com/CalderaWP/caldera-ghost-runner.git $WP_FOLDER/wp-content/plugins/caldera-ghost-runner
  - git clone https://github.com/calderawp/cf-connected-forms $WP_FOLDER/wp-content/plugins/cf-connected-forms
  - git clone https://gitlab.com/caldera-labs/cf-result-diff-plugin.git $WP_FOLDER/wp-content/plugins/cf-result-diff-plugin

  # Setup caldera-ghost-runner and cf-connected-forms
  - cd $WP_FOLDER/wp-content/plugins/caldera-ghost-runner && composer clear-cache && composer install && composer update
  - cd $WP_FOLDER/wp-content/plugins/cf-connected-forms && composer install && composer update && npm install && gulp

  # Setup and activate cf-result-diff if php7
  - |
    # Install if php7
    case "$TRAVIS_PHP_VERSION" in
      7.2|7.1|7.0|nightly)
        cd $WP_FOLDER/wp-content/plugins/cf-result-diff-plugin && composer install && composer update && cd $WP_FOLDER && wp plugin activate cf-result-diff-plugin
        ;;
      5.6|5.5|5.4|5.3)
        echo "PHP version does not support cf-result-diff"
        ;;
      5.2)
        echo "PHP version does not support cf-result-diff"
        ;;
      *)
        echo "PHP version does not support cf-result-diff"
        exit 1
        ;;
    esac

  # Activate all downloaded plugins
  - cd $WP_FOLDER && wp plugin activate caldera-forms && wp plugin activate caldera-ghost-runner && wp plugin activate cf-connected-forms && wp cgr import

  # Copy NGINX config file, enables the site, and restart web server
  - cd $TRAVIS_BUILD_DIR
  - sudo cp build/travis-nginx-conf /etc/nginx/sites-available/$NGROKDOMAIN
  - sudo sed -e "s?%WP_FOLDER%?$WP_FOLDER?g" --in-place /etc/nginx/sites-available/$NGROKDOMAIN
  - sudo sed -e "s?%NGROKDOMAIN%?$NGROKDOMAIN?g" --in-place /etc/nginx/sites-available/$NGROKDOMAIN
  - sudo ln -s /etc/nginx/sites-available/$NGROKDOMAIN /etc/nginx/sites-enabled/
  - sudo service php5-fpm restart
  - sudo service nginx restart

before_script:
  - |
    # Remove Xdebug for a huge performance increase:
    if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
      phpenv config-rm xdebug.ini
    else
      echo "xdebug.ini does not exist"
    fi
  - |
    # Export Composer's global bin dir to PATH, but not on PHP 5.2:
    if [[ ${TRAVIS_PHP_VERSION:0:3} != "5.2" ]]; then
      composer config --list --global
      export PATH=`composer config --list --global | grep '\[home\]' | { read a; echo "${a#* }/vendor/bin:$PATH"; }`
    fi
  - |
    # Install the specified version of PHPUnit depending on the PHP version:
    if [[ "$WP_TRAVISCI" == "travis:phpunit" ]]; then
      case "$TRAVIS_PHP_VERSION" in
        7.2|7.1|7.0|nightly)
          echo "Using PHPUnit 6.x"
          composer global require "phpunit/phpunit:^6"
          ;;
        5.6|5.5|5.4|5.3)
          echo "Using PHPUnit 4.x"
          composer global require "phpunit/phpunit:^4"
          ;;
        5.2)
          # Do nothing, use default PHPUnit 3.6.x
          echo "Using default PHPUnit, hopefully 3.6"
          ;;
        *)
          echo "No PHPUnit version handling for PHP version $TRAVIS_PHP_VERSION"
          exit 1
          ;;
      esac
    fi

  # Setup unit tests
  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      bash bin/install-wp-tests.sh wordpress_unit_test root '' localhost $WP_VERSION
    fi

  # Setup phpcs if the env var is set
  - |
    if [[ "$WP_TRAVISCI" == "phpcs" ]] ; then
      composer global require wp-coding-standards/wpcs
      phpcs --config-set installed_paths $HOME/.composer/vendor/wp-coding-standards/wpcs
    fi

  # Echo key version numbers
  - npm --version
  - node --version
  - mysql --version
  - phpenv versions
  - php --version
  - php -m
  - npm --version
  - node --version
  - which phpunit
  - phpunit --version
  - curl --version
  - git --version
  - locale -a

script:
  # Run unit tests / phpcs
  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      phpunit
      WP_MULTISITE=1 phpunit
    fi
  - |
    if [[ "$WP_TRAVISCI" == "phpcs" ]] ; then
      phpcs
    fi
  - sleep 1800
  # Run ghost inspector tests
  #- cd $WP_FOLDER && wp cgr run